/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'io.fabric'

android {
    signingConfigs {
        releaseConfig {
        }
    }
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "org.myprm.com.app.exp"
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 101
        versionName "1.0.1"
        testInstrumentationRunner "org.myprm.com.app.exp.MyPrmTestRunner"

        //Added for enabling vector Drawable
        vectorDrawables.useSupportLibrary = true

    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            useProguard false
            multiDexEnabled false

            ext.alwaysUpdateBuildId = false

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            testCoverageEnabled !project.hasProperty('android.injected.invoked.from.ide')
        }
        release {
            debuggable false

            minifyEnabled true
            shrinkResources true
            useProguard true

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        abortOnError false

    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets {
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }
    lintOptions {
        lintConfig rootProject.file('lint.xml')
    }
}


jacoco {
    toolVersion = "0.7.4+"
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha10'
    implementation deps.room.runtime
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.java8
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.glide
    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    /*
                implementation deps.timber
            */

    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'

    annotationProcessor deps.dagger.android_support_compiler
    annotationProcessor deps.dagger.compiler
    annotationProcessor deps.room.compiler
    annotationProcessor deps.lifecycle.compiler
    // Add the annotation processor if you are using Epoxy's annotations (recommended)
    annotationProcessor 'com.airbnb.android:epoxy-processor:3.0.0'

    testImplementation deps.junit
    testImplementation deps.mock_web_server
    testImplementation(deps.arch_core.testing, {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
    testImplementation deps.mockito.core
    androidTestImplementation 'androidx.appcompat:appcompat:1.0.2'
    androidTestImplementation 'androidx.recyclerview:recyclerview:1.0.0'
    androidTestImplementation 'androidx.cardview:cardview:1.0.0'
    androidTestImplementation 'com.google.android.material:material:1.1.0-alpha01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
    androidTestImplementation(deps.arch_core.testing, {
    })
    androidTestImplementation deps.dexmaker
    androidTestImplementation deps.mockito.core, { exclude group: 'net.bytebuddy' }
    //Added by Rakesh below 6
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.6'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    implementation 'androidx.lifecycle:lifecycle-reactivestreams:2.0.0'
    implementation 'com.google.firebase:firebase-database:16.0.1'
    implementation 'org.apache.commons:commons-lang3:3.7'
    implementation 'org.apache.commons:commons-collections4:4.1'

    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.5'

    implementation 'com.google.firebase:firebase-core:16.0.1'
    implementation 'com.github.GrenderG:Toasty:1.2.8'

    implementation 'com.google.android.gms:play-services-maps:15.0.1'

    implementation 'com.github.apl-devs:appintro:v4.2.3'

    implementation 'com.google.firebase:firebase-auth:16.0.1'
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'

    implementation 'com.google.firebase:firebase-dynamic-links:16.0.1'

    implementation 'com.jakewharton.threetenabp:threetenabp:1.0.3'

    implementation 'com.wdullaer:materialdatetimepicker:4.1.0'


    implementation "androidx.viewpager2:viewpager2:1.0.0-rc01"




}

task fullCoverageReport(type: JacocoReport) {
    dependsOn 'createDebugCoverageReport'
    dependsOn 'testDebugUnitTest'
    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*',
                      '**/*Test*.*', 'android/**/*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*_*Factory.class',
                      '**/*ComponentImpl.class',
                      '**/*SubComponentBuilder.class']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: "$buildDir", includes: [
            "jacoco/testDebugUnitTest.exec",
            "outputs/code-coverage/connected/*coverage.ec"
    ])
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
